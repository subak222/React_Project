{"ast":null,"code":"import _slicedToArray from \"C:/Users/pc/Desktop/soloproject/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\soloproject\\\\my-app\\\\src\\\\App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuizComponent from './QuizComponent';\nimport TimerComponent from './TimerComponent';\nimport RandomQuestionComponent from './RandomQuestionComponent';\nimport RecordComponent from './RecordComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  _s();\n  var _useState = useState([{\n      question: '리액트',\n      answer: 'react'\n    }, {\n      question: '자바스크립트',\n      answer: 'javascript'\n    }\n    // 추가적인 문제 데이터 추가 가능\n    ]),\n    _useState2 = _slicedToArray(_useState, 1),\n    questions = _useState2[0];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    bestRecord = _useState8[0],\n    setBestRecord = _useState8[1];\n  var handleGenerateQuestion = function handleGenerateQuestion(question) {\n    setCurrentQuestion(question);\n  };\n  var handleSubmitAnswer = function handleSubmitAnswer(inputAnswer) {\n    if (inputAnswer === currentQuestion.answer) {\n      setCount(count + 1);\n    }\n  };\n  var handleRecord = function handleRecord(record) {\n    setBestRecord(record);\n  };\n  var handleTimeUp = function handleTimeUp() {\n    setCurrentQuestion(null);\n    setCount(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCD08\\uC131 \\uD034\\uC988\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), currentQuestion ? /*#__PURE__*/_jsxDEV(QuizComponent, {\n      question: currentQuestion.question,\n      answer: currentQuestion.answer,\n      onSubmit: handleSubmitAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(RandomQuestionComponent, {\n      questions: questions,\n      onGenerateQuestion: handleGenerateQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(TimerComponent, {\n      timeLimit: 10,\n      onTimeUp: handleTimeUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(RecordComponent, {\n      count: count,\n      bestRecord: bestRecord,\n      onRecord: handleRecord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"NQzZjGZx1HIhn8dhAwamGAAjfdg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QuizComponent","TimerComponent","RandomQuestionComponent","RecordComponent","jsxDEV","_jsxDEV","App","_s","_useState","question","answer","_useState2","_slicedToArray","questions","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","count","setCount","_useState7","_useState8","bestRecord","setBestRecord","handleGenerateQuestion","handleSubmitAnswer","inputAnswer","handleRecord","record","handleTimeUp","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","onSubmit","onGenerateQuestion","timeLimit","onTimeUp","onRecord","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/soloproject/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QuizComponent from './QuizComponent';\nimport TimerComponent from './TimerComponent';\nimport RandomQuestionComponent from './RandomQuestionComponent';\nimport RecordComponent from './RecordComponent';\n\nconst App = () => {\n  const [questions] = useState([\n    { question: '리액트', answer: 'react' },\n    { question: '자바스크립트', answer: 'javascript' },\n    // 추가적인 문제 데이터 추가 가능\n  ]);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [count, setCount] = useState(0);\n  const [bestRecord, setBestRecord] = useState(0);\n\n  const handleGenerateQuestion = (question) => {\n    setCurrentQuestion(question);\n  };\n\n  const handleSubmitAnswer = (inputAnswer) => {\n    if (inputAnswer === currentQuestion.answer) {\n      setCount(count + 1);\n    }\n  };\n\n  const handleRecord = (record) => {\n    setBestRecord(record);\n  };\n\n  const handleTimeUp = () => {\n    setCurrentQuestion(null);\n    setCount(0);\n  };\n\n  return (\n    <div>\n      <h1>초성 퀴즈</h1>\n      {currentQuestion ? (\n        <QuizComponent\n          question={currentQuestion.question}\n          answer={currentQuestion.answer}\n          onSubmit={handleSubmitAnswer}\n        />\n      ) : (\n        <RandomQuestionComponent\n          questions={questions}\n          onGenerateQuestion={handleGenerateQuestion}\n        />\n      )}\n      <TimerComponent timeLimit={10} onTimeUp={handleTimeUp} />\n      <RecordComponent count={count} bestRecord={bestRecord} onRecord={handleRecord} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}